    int solve(int i , int arr[], int n,vector<int> &dp)
    {
        if(i >= n - 1)    
        return 0;
        
        int ans = 1e9;
        
        if(dp[i] != -1)
        return dp[i];
        
        for(int s = 1; i < n && s <= arr[i]; s++)
        {
            int jump = solve(s + i, arr, n,dp) + 1;
            
            ans = min(ans , jump);
        }
        
        return dp[i] = ans;
    }
    
    int minJumps(int arr[], int n){
        // Your code here
        if(n == 1)
        return 0;
        
        if(arr[0] == 0)
        return -1;
        
        vector<int> dp(n+1,-1);
        int ans = solve(0,arr,n,dp);
        if(ans == 1e9)
        return -1;
        else return ans;
    }
